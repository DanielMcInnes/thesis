format 222
"http" // http
  revision 1
  modified_by 2 "dmcinnes"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "/home/dmcinnes/git/websocketpp/websocketpp/http/"
  cpp_src_dir "/home/dmcinnes/git/websocketpp/websocketpp/http/"
  cpp_namespace "websocketpp::http"
  classview 128130 "http"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 128002 "attribute_list"
      visibility package stereotype "typedef" explicit_base_type "std::map<std::string,std::string>"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "/ HTTP handling support
/ The type of an HTTP attribute list

The attribute list is an unordered key/value map. Encoded attribute
values are delimited by semicolons.
"
    end

    class 128130 "parameter_list"
      visibility package stereotype "typedef" explicit_base_type "std::vector< std::pair<std::string,attribute_list> >"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "/ The type of an HTTP parameter list

The parameter list is an ordered pairing of a parameter and its
associated attribute list. Encoded parameter values are delimited by
commas.
"
    end

    class 128386 "exception"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 128002 // <generalisation>
	relation 128002 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 128002 // <generalisation>
	  b parent class_ref 128514 // typedef1
      end

      operation 128002 "exception"
	cpp_inline public explicit_return_type ""
	nparams 4
	  param in name "log_msg" explicit_type "std::string"
	  param in name "error_code" type class_ref 128258 // value
	  param in name "error_msg" explicit_type "std::string"
	    defaultvalue "std::string()"
	  param in name "body" explicit_type "std::string"
	    defaultvalue "std::string()"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}${)}${volatile}${throw}${abstract} : m_msg(log_msg)
          , m_error_msg(error_msg)
          , m_body(body)
          , m_error_code(error_code) {};
"
	
	
	
	
      end

      operation 128130 "~exception"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {};
"
	
	
	
	
      end

      operation 128258 "what"
	const constvalue cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
            return m_msg.c_str();
        };
"
	
	
	
	
      end

      attribute 134146 "m_msg"
	public explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 134274 "m_error_msg"
	public explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 134402 "m_body"
	public explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 128130 // m_error_code (<directional composition>)
	relation 128130 *-->
	  a role_name "m_error_code" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 128130 // m_error_code (<directional composition>)
	  b parent class_ref 128258 // value
      end
    end

    class 128514 "typedef1"
      visibility package stereotype "typedef" explicit_base_type "std::exception"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end
  end

  deploymentview 128002 "http"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 128002 "constants"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 128002 // attribute_list
	class_ref 128130 // parameter_list
	class_ref 128514 // typedef1
	class_ref 128386 // exception
      end
    end
  end

  package_ref 128130 // websocketpp http status_code

  package_ref 128258 // websocketpp http parser state

  package_ref 128386 // websocketpp http parser body_encoding

  package_ref 128514 // websocketpp http parser
end
